{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiURL;\n  }\n  // ------------------------------\n  // Métodos para Artículos\n  // ------------------------------\n  MostrarArticulosPorID() {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/MostrarArticulosPorID`);\n  }\n  buscarArticulo(query) {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulo?query=${query}`);\n  }\n  buscarArticulosPorCategoria(categoria) {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorCategoria?categoria=${categoria}`);\n  }\n  buscarArticulosPorColor(color) {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorColor?color=${color}`);\n  }\n  buscarArticulosPorTalla(talla) {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorTalla?talla=${talla}`);\n  }\n  buscarArticulosPorModelo(modelo) {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorModelo?modelo=${modelo}`);\n  }\n  insertarArticulo(articulo) {\n    return this.http.post(`${this.baseUrl}/Api/Articulos/InsertarArticulo`, articulo);\n  }\n  modificarStock(id, cantidad) {\n    return this.http.put(`${this.baseUrl}/Api/Articulos/ModificarStock`, {\n      id,\n      cantidad\n    });\n  }\n  eliminarArticulo(id) {\n    return this.http.delete(`${this.baseUrl}/Api/Articulos/EliminarArticulo?id=${id}`);\n  }\n  // ------------------------------\n  // Métodos para Carrito\n  // ------------------------------\n  insertarAlCarrito(carrito) {\n    return this.http.post(`${this.baseUrl}/Api/Carrito/InsertarAlCarrito`, carrito);\n  }\n  modificarCantidadArticulo(id, cantidad) {\n    return this.http.put(`${this.baseUrl}/Api/Carrito/ModificarCantidadArticulo`, {\n      id,\n      cantidad\n    });\n  }\n  finalizarCarrito(carrito) {\n    return this.http.post(`${this.baseUrl}/Api/Carrito/FinalizarCarrito`, carrito);\n  }\n  // ------------------------------\n  // Métodos para Clientes\n  // ------------------------------\n  mostrarClientes() {\n    return this.http.get(`${this.baseUrl}/Api/Clientes/MostrarClientes`);\n  }\n  insertarCliente(cliente) {\n    return this.http.post(`${this.baseUrl}/Api/Clientes/InsertarCliente`, cliente);\n  }\n  modificarCliente(id, cliente) {\n    return this.http.put(`${this.baseUrl}/Api/Clientes/ModificarCliente`, {\n      id,\n      ...cliente\n    });\n  }\n  eliminarCliente(id) {\n    return this.http.delete(`${this.baseUrl}/Api/Clientes/EliminarCliente?id=${id}`);\n  }\n  // ------------------------------\n  // Métodos para Pedidos\n  // ------------------------------\n  mostrarPedidos() {\n    return this.http.get(`${this.baseUrl}/Api/Pedidos/MostrarPedidos`);\n  }\n  mostrarDetallesPedido(id) {\n    return this.http.get(`${this.baseUrl}/Api/Pedidos/MostrarDetallesPedido?id=${id}`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["environment","ApiService","constructor","http","apiURL","MostrarArticulosPorID","get","baseUrl","buscarArticulo","query","buscarArticulosPorCategoria","categoria","buscarArticulosPorColor","color","buscarArticulosPorTalla","talla","buscarArticulosPorModelo","modelo","insertarArticulo","articulo","post","modificarStock","id","cantidad","put","eliminarArticulo","delete","insertarAlCarrito","carrito","modificarCantidadArticulo","finalizarCarrito","mostrarClientes","insertarCliente","cliente","modificarCliente","eliminarCliente","mostrarPedidos","mostrarDetallesPedido","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rober\\OneDrive\\Desktop\\ESTUDIOS\\DAM\\proyecto\\ApiProyecto\\TiendaRopaAngular\\TiendaProyectoAngular\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n// Interfaces opcionales para tipar las respuestas\nimport { Product } from '../models/product'; // Ejemplo de modelo. Crea más según necesidad.\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = environment.apiURL;\n\n  constructor(private http: HttpClient) {}\n\n  // ------------------------------\n  // Métodos para Artículos\n  // ------------------------------\n  MostrarArticulosPorID(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/MostrarArticulosPorID`);\n  }\n\n  buscarArticulo(query: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulo?query=${query}`);\n  }\n\n  buscarArticulosPorCategoria(categoria: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorCategoria?categoria=${categoria}`);\n  }\n\n  buscarArticulosPorColor(color: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorColor?color=${color}`);\n  }\n\n  buscarArticulosPorTalla(talla: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorTalla?talla=${talla}`);\n  }\n\n  buscarArticulosPorModelo(modelo: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Articulos/BuscarArticulosPorModelo?modelo=${modelo}`);\n  }\n\n  insertarArticulo(articulo: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Api/Articulos/InsertarArticulo`, articulo);\n  }\n\n  modificarStock(id: number, cantidad: number): Observable<any> {\n    return this.http.put(`${this.baseUrl}/Api/Articulos/ModificarStock`, { id, cantidad });\n  }\n\n  eliminarArticulo(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/Api/Articulos/EliminarArticulo?id=${id}`);\n  }\n\n  // ------------------------------\n  // Métodos para Carrito\n  // ------------------------------\n  insertarAlCarrito(carrito: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Api/Carrito/InsertarAlCarrito`, carrito);\n  }\n\n  modificarCantidadArticulo(id: number, cantidad: number): Observable<any> {\n    return this.http.put(`${this.baseUrl}/Api/Carrito/ModificarCantidadArticulo`, { id, cantidad });\n  }\n\n  finalizarCarrito(carrito: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Api/Carrito/FinalizarCarrito`, carrito);\n  }\n\n  // ------------------------------\n  // Métodos para Clientes\n  // ------------------------------\n  mostrarClientes(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Clientes/MostrarClientes`);\n  }\n\n  insertarCliente(cliente: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/Api/Clientes/InsertarCliente`, cliente);\n  }\n\n  modificarCliente(id: number, cliente: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}/Api/Clientes/ModificarCliente`, { id, ...cliente });\n  }\n\n  eliminarCliente(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/Api/Clientes/EliminarCliente?id=${id}`);\n  }\n\n  // ------------------------------\n  // Métodos para Pedidos\n  // ------------------------------\n  mostrarPedidos(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Pedidos/MostrarPedidos`);\n  }\n\n  mostrarDetallesPedido(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/Api/Pedidos/MostrarDetallesPedido?id=${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}